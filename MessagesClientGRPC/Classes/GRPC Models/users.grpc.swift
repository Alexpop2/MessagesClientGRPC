//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: users.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

internal protocol Userservice_UserServicegetUserByPhoneCall: ClientCallUnary {}

fileprivate final class Userservice_UserServicegetUserByPhoneCallBase: ClientCallUnaryBase<Userservice_Phone, Userservice_User>, Userservice_UserServicegetUserByPhoneCall {
  override class var method: String { return "/userservice.UserService/getUserByPhone" }
}

internal protocol Userservice_UserServicegetUserByNameCall: ClientCallUnary {}

fileprivate final class Userservice_UserServicegetUserByNameCallBase: ClientCallUnaryBase<Userservice_Name, Userservice_User>, Userservice_UserServicegetUserByNameCall {
  override class var method: String { return "/userservice.UserService/getUserByName" }
}

internal protocol Userservice_UserServicegetUserByIDCall: ClientCallUnary {}

fileprivate final class Userservice_UserServicegetUserByIDCallBase: ClientCallUnaryBase<Userservice_ID, Userservice_User>, Userservice_UserServicegetUserByIDCall {
  override class var method: String { return "/userservice.UserService/getUserByID" }
}

internal protocol Userservice_UserServicegetKnownRegisteredUsersByPhonesCall: ClientCallUnary {}

fileprivate final class Userservice_UserServicegetKnownRegisteredUsersByPhonesCallBase: ClientCallUnaryBase<Userservice_Phones, Userservice_Users>, Userservice_UserServicegetKnownRegisteredUsersByPhonesCall {
  override class var method: String { return "/userservice.UserService/getKnownRegisteredUsersByPhones" }
}

internal protocol Userservice_UserServicegetKnownRegisteredUsersByIdsCall: ClientCallUnary {}

fileprivate final class Userservice_UserServicegetKnownRegisteredUsersByIdsCallBase: ClientCallUnaryBase<Userservice_IDs, Userservice_Users>, Userservice_UserServicegetKnownRegisteredUsersByIdsCall {
  override class var method: String { return "/userservice.UserService/getKnownRegisteredUsersByIds" }
}

internal protocol Userservice_UserServicesetUserNameCall: ClientCallUnary {}

fileprivate final class Userservice_UserServicesetUserNameCallBase: ClientCallUnaryBase<Userservice_Name, Userservice_Empty>, Userservice_UserServicesetUserNameCall {
  override class var method: String { return "/userservice.UserService/setUserName" }
}


/// Instantiate Userservice_UserServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Userservice_UserServiceService: ServiceClient {
  /// Synchronous. Unary.
  func getUserByPhone(_ request: Userservice_Phone, metadata customMetadata: Metadata) throws -> Userservice_User
  /// Asynchronous. Unary.
  func getUserByPhone(_ request: Userservice_Phone, metadata customMetadata: Metadata, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByPhoneCall

  /// Synchronous. Unary.
  func getUserByName(_ request: Userservice_Name, metadata customMetadata: Metadata) throws -> Userservice_User
  /// Asynchronous. Unary.
  func getUserByName(_ request: Userservice_Name, metadata customMetadata: Metadata, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByNameCall

  /// Synchronous. Unary.
  func getUserByID(_ request: Userservice_ID, metadata customMetadata: Metadata) throws -> Userservice_User
  /// Asynchronous. Unary.
  func getUserByID(_ request: Userservice_ID, metadata customMetadata: Metadata, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByIDCall

  /// Synchronous. Unary.
  func getKnownRegisteredUsersByPhones(_ request: Userservice_Phones, metadata customMetadata: Metadata) throws -> Userservice_Users
  /// Asynchronous. Unary.
  func getKnownRegisteredUsersByPhones(_ request: Userservice_Phones, metadata customMetadata: Metadata, completion: @escaping (Userservice_Users?, CallResult) -> Void) throws -> Userservice_UserServicegetKnownRegisteredUsersByPhonesCall

  /// Synchronous. Unary.
  func getKnownRegisteredUsersByIds(_ request: Userservice_IDs, metadata customMetadata: Metadata) throws -> Userservice_Users
  /// Asynchronous. Unary.
  func getKnownRegisteredUsersByIds(_ request: Userservice_IDs, metadata customMetadata: Metadata, completion: @escaping (Userservice_Users?, CallResult) -> Void) throws -> Userservice_UserServicegetKnownRegisteredUsersByIdsCall

  /// Synchronous. Unary.
  func setUserName(_ request: Userservice_Name, metadata customMetadata: Metadata) throws -> Userservice_Empty
  /// Asynchronous. Unary.
  func setUserName(_ request: Userservice_Name, metadata customMetadata: Metadata, completion: @escaping (Userservice_Empty?, CallResult) -> Void) throws -> Userservice_UserServicesetUserNameCall

}

internal extension Userservice_UserServiceService {
  /// Synchronous. Unary.
  func getUserByPhone(_ request: Userservice_Phone) throws -> Userservice_User {
    return try self.getUserByPhone(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func getUserByPhone(_ request: Userservice_Phone, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByPhoneCall {
    return try self.getUserByPhone(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getUserByName(_ request: Userservice_Name) throws -> Userservice_User {
    return try self.getUserByName(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func getUserByName(_ request: Userservice_Name, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByNameCall {
    return try self.getUserByName(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getUserByID(_ request: Userservice_ID) throws -> Userservice_User {
    return try self.getUserByID(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func getUserByID(_ request: Userservice_ID, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByIDCall {
    return try self.getUserByID(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getKnownRegisteredUsersByPhones(_ request: Userservice_Phones) throws -> Userservice_Users {
    return try self.getKnownRegisteredUsersByPhones(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func getKnownRegisteredUsersByPhones(_ request: Userservice_Phones, completion: @escaping (Userservice_Users?, CallResult) -> Void) throws -> Userservice_UserServicegetKnownRegisteredUsersByPhonesCall {
    return try self.getKnownRegisteredUsersByPhones(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getKnownRegisteredUsersByIds(_ request: Userservice_IDs) throws -> Userservice_Users {
    return try self.getKnownRegisteredUsersByIds(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func getKnownRegisteredUsersByIds(_ request: Userservice_IDs, completion: @escaping (Userservice_Users?, CallResult) -> Void) throws -> Userservice_UserServicegetKnownRegisteredUsersByIdsCall {
    return try self.getKnownRegisteredUsersByIds(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func setUserName(_ request: Userservice_Name) throws -> Userservice_Empty {
    return try self.setUserName(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  func setUserName(_ request: Userservice_Name, completion: @escaping (Userservice_Empty?, CallResult) -> Void) throws -> Userservice_UserServicesetUserNameCall {
    return try self.setUserName(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Userservice_UserServiceServiceClient: ServiceClientBase, Userservice_UserServiceService {
  /// Synchronous. Unary.
  internal func getUserByPhone(_ request: Userservice_Phone, metadata customMetadata: Metadata) throws -> Userservice_User {
    return try Userservice_UserServicegetUserByPhoneCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func getUserByPhone(_ request: Userservice_Phone, metadata customMetadata: Metadata, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByPhoneCall {
    return try Userservice_UserServicegetUserByPhoneCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getUserByName(_ request: Userservice_Name, metadata customMetadata: Metadata) throws -> Userservice_User {
    return try Userservice_UserServicegetUserByNameCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func getUserByName(_ request: Userservice_Name, metadata customMetadata: Metadata, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByNameCall {
    return try Userservice_UserServicegetUserByNameCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getUserByID(_ request: Userservice_ID, metadata customMetadata: Metadata) throws -> Userservice_User {
    return try Userservice_UserServicegetUserByIDCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func getUserByID(_ request: Userservice_ID, metadata customMetadata: Metadata, completion: @escaping (Userservice_User?, CallResult) -> Void) throws -> Userservice_UserServicegetUserByIDCall {
    return try Userservice_UserServicegetUserByIDCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getKnownRegisteredUsersByPhones(_ request: Userservice_Phones, metadata customMetadata: Metadata) throws -> Userservice_Users {
    return try Userservice_UserServicegetKnownRegisteredUsersByPhonesCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func getKnownRegisteredUsersByPhones(_ request: Userservice_Phones, metadata customMetadata: Metadata, completion: @escaping (Userservice_Users?, CallResult) -> Void) throws -> Userservice_UserServicegetKnownRegisteredUsersByPhonesCall {
    return try Userservice_UserServicegetKnownRegisteredUsersByPhonesCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getKnownRegisteredUsersByIds(_ request: Userservice_IDs, metadata customMetadata: Metadata) throws -> Userservice_Users {
    return try Userservice_UserServicegetKnownRegisteredUsersByIdsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func getKnownRegisteredUsersByIds(_ request: Userservice_IDs, metadata customMetadata: Metadata, completion: @escaping (Userservice_Users?, CallResult) -> Void) throws -> Userservice_UserServicegetKnownRegisteredUsersByIdsCall {
    return try Userservice_UserServicegetKnownRegisteredUsersByIdsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func setUserName(_ request: Userservice_Name, metadata customMetadata: Metadata) throws -> Userservice_Empty {
    return try Userservice_UserServicesetUserNameCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  internal func setUserName(_ request: Userservice_Name, metadata customMetadata: Metadata, completion: @escaping (Userservice_Empty?, CallResult) -> Void) throws -> Userservice_UserServicesetUserNameCall {
    return try Userservice_UserServicesetUserNameCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

